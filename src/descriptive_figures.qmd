---
title: "descriptive_figures"
format: html
editor: visual
---
```{r}
pacman::p_load(arrow,
               ggplot2,
               tidyverse,
               gridExtra,
               ggprism,
               ggpubr,
               ggcorrplot,
               ComplexHeatmap,
               circlize,
               reshape2)

source("helpers/df_to_matrix.R")
source("helpers/heatmap.R")
source("helpers/lexico_helper.R")
```

```{r}
# base au niveau de phrases
df <- arrow::read_feather('../data/intermediate/big/base_sentences.feather')
```

```{r}
#ggprism::preview_theme("colorblind_safe")
ggprism::prism_color_pal("floral")(6)

```

```{r}
# Assuming you have a data frame called 'df' with columns: num, human, person, societe, nature, position_in_avis
quantile = 50

# Calculate the quantiles for position_in_avis
df_heatmap <- df |> 
  mutate(position_in_avis =sentence_index/number_sentences)|>
  arrange(num, position_in_avis) |>
  group_by(num) |>
  mutate(quantile_group = ntile(position_in_avis, quantile))|>
  ungroup()|>
  group_by(num,quantile_group,president,theme,number_sentences)|>
  summarise(human_nb = sum(human),
            person_nb = sum(person),
            individu_nb = sum(individu),
            societe_nb = sum(societe),
            nature_nb = sum(nature),
            env_nb = sum(environment),
            n_in_quantile = n())|>
  mutate(human_freq = human_nb/n_in_quantile,
         person_freq = person_nb/n_in_quantile,
         individu_freq = individu_nb/n_in_quantile,
         societe_freq = societe_nb/n_in_quantile,
         nature_freq = nature_nb/n_in_quantile,
         env_freq = env_nb/n_in_quantile)
```
Description :
Pour chaque quantile, la couleur sur la carte de chaleur représente la fréquence relative d'un mot spécifique. Pour calculer cette fréquence, nous divisons le nombre d'occurrences du mot par le nombre total de phrases dans le quantile. Cette transformation fournit une mesure de la fréquence à laquelle le mot apparaît au sein du sous-ensemble de phrases représenté par chaque quantile, permettant ainsi de comparer l'utilisation du mot dans différentes parties du texte.

```{r}
source("helpers/heatmap.R")
plot_width = 20
plot_height = 15

pdf("../output/descriptive_figures/more_words_complexheatmaps_test.pdf", width = plot_width, height = plot_height)  # Adjust size as needed

heatmap_figure_frequence_quantile(df_heatmap = df_heatmap,
                                  X="num",Y="quantile_group",
                                  Zs = c("person_freq","human_freq","individu_freq",
                                    "societe_freq","nature_freq","env_freq"),
                                  names_legend = c("personne","humain","individu",
                                                   "société","nature","environnement"),
                                  subrow_title = "Freq",
                                  subcol_title = "Numéro de l'avis",
                                  mainrow_title = "Position relative de la phrase",
                                  maincol_title = "Cartes de chaleur de la fréquence de la présence de mots dans les phrases par groupe de phrase (2% quantile)",
                                  colors_hexcodes = c("#40007F","#66CCFE","#91188E",
                                                      "#FF0066","#107F80","#539027")
                                  )
dev.off()
```
```{r}
# Assuming you have a data frame called 'df' with columns: num, human, person, societe, nature, position_in_avis
quantile = 50

df_heatmap <- df |>
  rowwise() |>
  mutate(gen = has_words(sentence, c("génétique","génétiques","gène","gènes")),
         cellule = has_words(sentence, c("cellule","cellules","cellulaire","cellulaires")),
         vitro = has_words(sentence,c("vitro")),
         vaccin = has_words(sentence, c("vaccincation","vaccinations","vaccin","vaccins")),
         biodiv = has_words(sentence, c("biodiversité"))) |>
  ungroup() |>
  mutate(position_in_avis =sentence_index/number_sentences)|>
  arrange(num, position_in_avis) |>
  group_by(num) |>
  mutate(quantile_group = ntile(position_in_avis, quantile))|>
  ungroup()|>
  group_by(num,quantile_group,president,theme,number_sentences)|>
  summarise(gen_freq = sum(gen)/n(),
            cellule_freq = sum(cellule)/n(),
            vitro_freq = sum(vitro)/n(),
            vaccin_freq = sum(vaccin)/n(),
            biodiv_freq = sum(biodiv)/n(),
            n_in_quantile = n())

source("helpers/heatmap.R")
plot_width = 20
plot_height = 15

pdf("../output/descriptive_figures/science_words_complexheatmaps.pdf", width = plot_width, height = plot_height)  # Adjust size as needed

heatmap_figure_frequence_quantile(df_heatmap = df_heatmap,
                                  X="num",Y="quantile_group",
                                  Zs = c("gen_freq","cellule_freq",
                                    "vitro_freq","vaccin_freq","biodiv_freq"),
                                  names_legend = c("génétique","cellule",
                                                   "in vitro","vaccin",
                                                   "biodiversité"),
                                  subrow_title = "Freq",
                                  subcol_title = "Numéro de l'avis",
                                  mainrow_title = "Position relative de la phrase",
                                  maincol_title = "Cartes de chaleur de la fréquence de la présence de mots dans les phrases par groupe de phrase (2% quantile)",
                                  colors_hexcodes = c("#40007F","#66CCFE","#91188E",
                                                      "#FF0066","#107F80")
                                  )
dev.off()
```
```{r}
# Assuming you have a data frame called 'df' with columns: num, human, person, societe, nature, position_in_avis
quantile = 50

df_heatmap <- df |>
  rowwise() |>
  mutate(person = has_words(sentence,c("personne","personnes")),
         human = has_words(sentence,c("humain","humains")),
         societe = has_words(saisine, c("société","sociétés","societé","societé","societés","sociétes")),
         nature_env = has_words(saisine, c("nature","natures","environnement","environnements")),
         gen = has_words(sentence, c("génétique","génétiques","gène","gènes")),
         cellule = has_words(sentence, c("cellule","cellules","cellulaire","cellulaires")),
         vitro = has_words(sentence,c("vitro"))) |>
  ungroup() |>
  mutate(position_in_avis =sentence_index/number_sentences)|>
  arrange(num, position_in_avis) |>
  group_by(num) |>
  mutate(quantile_group = ntile(position_in_avis, quantile))|>
  ungroup()|>
  group_by(num,quantile_group,president,theme,number_sentences)|>
  summarise(person_freq = sum(person)/n(),
            human_freq = sum(human)/n(),
            societe_freq = sum(societe)/n(),
            nature_env_freq = sum(nature_env)/n(),
            gen_freq = sum(gen)/n(),
            cellule_freq = sum(cellule)/n(),
            vitro_freq = sum(vitro)/n(),
            n_in_quantile = n())

source("helpers/heatmap.R")
plot_width = 20
plot_height = 15

pdf("../output/descriptive_figures/science_person_words_complexheatmaps.pdf", width = plot_width, height = plot_height)  # Adjust size as needed

heatmap_figure_frequence_quantile(df_heatmap = df_heatmap,
                                  X="num",Y="quantile_group",
                                  Zs = c("person_freq","human_freq",
                                         "gen_freq","cellule_freq","vitro_freq"),
                                  names_legend = c("personne","humain",
                                                   "génétique","cellule","in vitro"
                                                   ),
                                  subrow_title = "Freq",
                                  subcol_title = "Numéro de l'avis",
                                  mainrow_title = "Position relative de la phrase",
                                  maincol_title = "Cartes de chaleur de la fréquence de la présence de mots dans les phrases par groupe de phrase (2% quantile)",
                                  colors_hexcodes = c("#40007F","#66CCFE",
                                                      "#91188E","#FF0066","#107F80")
                                  )
dev.off()
```
```



```{r}
# Calculate the correlation matrix
cor_matrix <- cor(df|>ungroup()|>
                    select(person,human,individu,societe,nature,environment))

# Create a correlation matrix plot with ggpubr
corr_plot <- ggcorrplot(cor_matrix, 
                        ggtheme = theme_prism(),
                        colors = c("#FF0066", "white", "#66CCFE"),
                        p.mat = cor_pmat(cor_matrix),
                        lab = TRUE
                        )
corr_plot

ggsave("../output/descriptive_figures/words_corrplot.pdf", 
       plot = corr_plot)
```
```{r}
# Assuming you have a data frame called 'df' with columns: num, human, person, societe, nature, position_in_avis
quantile = 10

# Calculate the quantiles for position_in_avis
df_heatmap <- df |> 
  mutate(position_in_avis =sentence_index/number_sentences)|>
  arrange(num, position_in_avis) |>
  group_by(num) |>
  mutate(quantile_group = ntile(position_in_avis, quantile))|>
  ungroup()|>
  group_by(num,quantile_group,president,theme,number_sentences)|>
  summarise(human_nb = sum(human),
            person_nb = sum(person),
            individu_nb = sum(individu),
            societe_nb = sum(societe),
            nature_nb = sum(nature),
            env_nb = sum(environment),
            n_in_quantile = n())|>
  mutate(human_freq = human_nb/n_in_quantile,
         person_freq = person_nb/n_in_quantile,
         individu_freq = individu_nb/n_in_quantile,
         societe_freq = societe_nb/n_in_quantile,
         nature_freq = nature_nb/n_in_quantile,
         env_freq = env_nb/n_in_quantile)
```

```{r}
# Calculate the correlation matrix
cor_matrix <- cor(df_heatmap|>ungroup()|>
                    select(person_freq,human_freq,societe_freq,nature_freq,env_freq))

# Create a correlation matrix plot with ggpubr
corr_plot <- ggcorrplot(cor_matrix, 
                        ggtheme = theme_prism(),
                        colors = c("#FF0066", "white", "#66CCFE"),
                        p.mat = cor_pmat(cor_matrix),
                        lab = TRUE,
                        title = paste("Corrélation entre les fréquences pour",quantile,"quantiles")
                        )
corr_plot

ggsave("../output/descriptive_figures/words_quantile_corrplot.pdf", 
       plot = corr_plot)
```
    