---
title: "CCNE Personne across avis"
author: "Léopold MAURICE"
date: "2024-06-05"
project: CCNE
supervision: Pr. Emmanuel Didier, CMH/ENS/EHESS
format:
  html:
    toc: true
    number-sections: true
    colorlinks: true
    geometry:
      - top=10mm
      - left=20mm
      - right=20mm
      - bottom=10mm  
      - heightrounded
    highlight-style: github
    fontfamily: libertinus
    documentclass: report
    fig-width: 12
    fig-height: 9
  pdf:
    documentclass: article
    geometry: [left=1in, right=1in, top=1in, bottom=1in]
    fontsize: 11pt
    keep-tex: true
    toc: true
    toc-depth: 2
    number-sections: true
execute:
  eval: true
  message: false
  warning: false
  echo: false
  output: true
  error: true
editor: source
---

```{r}
require(pacman,quietly = F)

pacman::p_load(arrow,
               tidyverse,
               reshape2,
               stringr,

               stats,
               rstatix,
               
               ggplot2,
               gridExtra,
               ggprism,
               ggpubr,
               ggcorrplot,
               ggraph,
               ggnetwork,
               ggrepel,
               
               igraph,
               tidygraph,
               #sna,
               #network,
               
               networkD3,
               leaflet,
               
               rmarkdown,
               
               readxl)

source("helpers/database_creation.R")
source("helpers/figures.R")

save_figures = T
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 0.1, 1)
symbols = c("****", "***", "**", "*", "•","ns")
significance = c("p < 0.0001", "p < 0.001", "p < 0.01", "p < 0.05", "p < 0.1", "p>0.1")
signif_caption_text <- paste("Significance levels:\n", paste(symbols, ":", significance, collapse = ", "))

```

# Résumé de la méthodologie et des données
Les données : chaque citation a été assigné à l'avis où elle est cité, et un auteur, une institution ou domaine.
Pour certains auteurs que j'ai classifié comme classique je vais faire un traitement particulier : si la fréquence d'apparition est > 2, je le garde en soit, sinon je le relis à un domaine. Pour la presse spécialisée, la presse, les lois je vais adopter une démarche similaire.
```{r}
designation_recoding <- Vectorize(function(type, Auteur_Institution, Institution_Domaine, freq_auteur, freq) {
if (type == "classic" && freq_auteur >= 2) {
  return(Auteur_Institution)
} else if (type == "collectif") {
  return("Collectif")
} else if (type == "presse spécialisée" && freq < 2) {
  return("Presse Spécialisée diverse")
} else if (type == "presse" && freq < 2) {
  return("Presse diverse")
} else if (type == "loi" && freq < 2) {
  return("Loi diverse")
} else if (type == "comité d'éthique" && freq < 2) {
  return("Comité d'éthique divers")
} else if (type == "autre pays" && freq < 2) {
  return("Comité d'éthique divers")
} else {
  return(Institution_Domaine)
}
})


metadata_avis <- open_metadata()

metadata_citation <- read_excel("../data/raw/collected_metadata/metadata_citation.xlsx", 
    col_types = c("text", "text", "skip", 
        "text", "text", "text", "skip", "skip", 
        "skip"))%>%
  separate_rows(cité_dans_avis_num, sep = ";")%>%
  separate_rows(Institution_Domaine, sep = ";")%>%
  group_by(Auteur_Institution)%>%
  mutate(freq_auteur = n())%>%
  ungroup()%>%
  group_by(Institution_Domaine)%>%
  mutate(freq_institution = n())%>%
  ungroup()%>%
  mutate(type = ifelse(is.na(type),"",type),
         type = ifelse(type %in% c("livre","article","colloque","thèse"),"académique",type),
         Désignation = designation_recoding(type,Auteur_Institution, Institution_Domaine, freq_auteur,freq_institution)
         )

recat <- read_excel("../data/intermediate/reseau/recategorize_designation.xlsx")%>%
  select(-count)

metadata_citation <- metadata_citation%>%
  left_join(recat, by = "Désignation")%>%
  rename(Precise_Désignation = Désignation,
         Désignation = Rename)

```


```{r}
# regardons combien chaque "classic" est cité
# metadata_citation%>%
#   filter(type  == "classic")%>%
#   group_by(Auteur_Institution)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

# # regardons combien chaque "classic" est cité
# metadata_citation%>%
#   filter(type  == "presse")%>%
#   group_by(Institution_Domaine)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

# metadata_citation%>%
#   filter(type  == "presse spécialisée")%>%
#   group_by(Institution_Domaine)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

# metadata_citation%>%
#   filter(type  == "loi")%>%
#   group_by(Institution_Domaine)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))
```

```{r}
#| eval: false
# Load necessary libraries
library(dplyr)
library(networkD3)

# Count the number of citations for each Désignation
citation_counts <- metadata_citation %>%
  group_by(Désignation, Groupe) %>%
  summarise(citation_count = n(), .groups = 'drop')%>%
  mutate(Groupe = gsub(" ", "\n", Groupe),
         Désignation = paste(Désignation,citation_count,sep = "|"))

# Add a row for the CCNE node
citation_counts <- citation_counts %>%
  add_row(Désignation = "CCNE", Groupe = "CCNE", citation_count = sum(citation_counts$citation_count))

# Organize data into a hierarchical structure
create_hierarchy <- function(group_name, citations) {
  list(
    name = group_name,
    children = lapply(citations, function(citation) {
      list(name = citation, size = citation_counts %>% filter(Désignation == citation) %>% pull(citation_count))
    })
  )
}

groups <- unique(citation_counts$Groupe[citation_counts$Groupe != "CCNE"])
hierarchy <- list(
  name = "CCNE",
  children = lapply(groups, function(group) {
    citations <- citation_counts %>% filter(Groupe == group) %>% pull(Désignation)
    create_hierarchy(group, citations)
  })
)

# Plot the hierarchical radial network
radialNetwork(List = hierarchy,
              fontSize = 20
              )

```
```{r, fig.width= = 50, fig.height= 50}
citation_counts <- metadata_citation %>%
  group_by(Désignation, Groupe) %>%
  summarise(citation_count = n(), .groups = 'drop') %>%
  mutate(Categorie = Groupe, label = ifelse(citation_count>5, Désignation, ""))%>%
  rename(from = Groupe, to = Désignation, size = citation_count)

group_counts <- metadata_citation %>%
  group_by(Groupe) %>%
  summarise(size = n(),
            weight = 4,
            .groups = 'drop') %>%
  rename(to = Groupe) %>%
  mutate(Categorie = to,
         from = "CCNE",
         label = "")

macrograph_edgelist_df <- bind_rows(group_counts, citation_counts)

macrograph_nodes_df <- macrograph_edgelist_df %>%
  select(name = to, size, Categorie,label) %>%
  distinct() %>%
  add_row(name = "CCNE", size = sum(group_counts$size, na.rm = TRUE), 
          Categorie = "CCNE",
          label = "CCNE") %>%
  mutate(size = as.numeric(size),
         weight = log10(size+1),
         label_size =log10(size+1)
)

# Create the tbl_graph object
graph <- tbl_graph(edges = macrograph_edgelist_df %>% 
                     select(from, to, Categorie, label), 
                   nodes = macrograph_nodes_df, directed = TRUE)

set.seed(1968)
# Create the circular packing graph
# ggraph(graph, 'circlepack') + 
#   geom_edge_link() + 
#   geom_node_point(aes(colour = Categorie)) +
#   #geom_node_circle(aes(fill = size), size = 0.25, n = 50) +
#   geom_node_text(aes(label = label, colour = Categorie, size = label_size), repel = TRUE) +
#   scale_color_prism("floral") +
#   theme_void(base_size = 20)


ggraph(graph, 'circlepack', weight = size) + 
  geom_node_circle(aes(fill = Categorie)) +
  scale_fill_prism("floral") +
  theme_void(base_size = 20)

```


```{r}
reseau_citation_extra <- metadata_citation%>%
  rename(Avis = cité_dans_avis_num)%>%
  group_by(Avis,Désignation, Groupe)%>%
  summarise(Citations = n())%>%
  rename(from = Avis,
         to = Désignation,
         Categorie = Groupe)%>%
  mutate(shape = "Extra citation")

reseau_citation_intra <- metadata_avis%>%
  filter(!(is.na(citations_autres_avis)))%>%
  separate_rows(citations_autres_avis , sep = ";")%>%
  rename(from = num,
         to = citations_autres_avis)%>%
  group_by(from,to)%>%
  summarise(Citations = n())%>%
  mutate(shape = "Intra citation",
         Categorie = "CCNE",
         from = as.character(from))

mesograph_edgelist_df <- bind_rows(reseau_citation_extra,reseau_citation_intra)%>%
  filter(!(to=="covid")) # supprimer les avis covid pour l'instant


mesograph_nodes_df <- bind_rows(
  metadata_citation%>%
    rename(name = Désignation, Categorie = Groupe)%>%
    mutate(shape = "Extra citation")%>%
    select(name, Categorie, shape)%>%
    distinct(),
  metadata_avis%>%
    mutate(name = as.character(num),
           shape = "Intra citation",
           Categorie = "CCNE")%>%
    select(name, Categorie, shape)%>%
    distinct()
)%>%
  filter(!(is.na(name)))

# Create the tbl_graph object
reseau_citation <- tbl_graph(edges = mesograph_edgelist_df%>% 
                     select(from, to,Citations, Categorie, shape),
                   nodes = mesograph_nodes_df%>%
                     select(name, Categorie, shape),
                   directed = TRUE, node_key = "name")%>%
  activate(nodes) %>%
  filter(degree(.) > 0)

# Convertir l'objet tbl_graph en igraph
reseau_citation_igraph <- as.igraph(reseau_citation)

# Convertir l'objet igraph en format compatible avec networkD3
network_d3 <- igraph_to_networkD3(reseau_citation_igraph, group = V(reseau_citation_igraph)$Categorie)

# Créer le graphique networkD3
forceNetwork(Links = network_d3$links, Nodes = network_d3$nodes, 
             Source = 'source', Target = 'target', 
             NodeID = 'name', Group = 'group', 
             opacity = 0.8, fontSize = 12)
```
```{r}
ggraph(reseau_citation, layout = 'stress') + 
  geom_edge_link(aes(edge_alpha = Citations), show.legend = FALSE) +
  geom_node_point(aes(fill = Categorie, shape = shape, size = degree(reseau_citation)), show.legend = TRUE) +
  geom_node_text(aes(label = name), repel = TRUE, size = 3) +
  scale_size_continuous(range = c(3, 10)) +
  theme_void() +
  theme(legend.position = "right") +
  labs(title = "Graphique de citation", subtitle = "Visualisation des citations avec ggraph")
```

