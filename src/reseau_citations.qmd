---
title: "CCNE Personne across avis"
author: "Léopold MAURICE"
date: "2024-06-05"
project: CCNE
supervision: Pr. Emmanuel Didier, CMH/ENS/EHESS
format:
  html:
    toc: true
    number-sections: true
    colorlinks: true
    geometry:
      - top=10mm
      - left=20mm
      - right=20mm
      - bottom=10mm  
      - heightrounded
    highlight-style: github
    fontfamily: libertinus
    documentclass: report
    fig-width: 12
    fig-height: 9
  pdf:
    documentclass: article
    geometry: [left=1in, right=1in, top=1in, bottom=1in]
    fontsize: 11pt
    keep-tex: true
    toc: true
    toc-depth: 2
    number-sections: true
execute:
  eval: true
  message: false
  warning: false
  echo: false
  output: true
  error: true
editor: source
---

```{r}
require(pacman,quietly = F)

pacman::p_load(arrow,
               tidyverse,
               reshape2,
               stringr,
               
               igraph,
               #sna,
               #network,

               stats,
               rstatix,
               
               ggplot2,
               gridExtra,
               ggprism,
               ggpubr,
               ggcorrplot,
               #ggraph,
               ggnetwork,
               
               rmarkdown,
               
               readxl)

source("helpers/database_creation.R")
source("helpers/figures.R")

save_figures = T
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 0.1, 1)
symbols = c("****", "***", "**", "*", "•","ns")
significance = c("p < 0.0001", "p < 0.001", "p < 0.01", "p < 0.05", "p < 0.1", "p>0.1")
signif_caption_text <- paste("Significance levels:\n", paste(symbols, ":", significance, collapse = ", "))

```

# Résumé de la méthodologie et des données
Les données : chaque citation a été assigné à l'avis où elle est cité, et un auteur, une institution ou domaine.
Pour certains auteurs que j'ai classifié comme classique je vais faire un traitement particulier : si la fréquence d'apparition est > 2, je le garde en soit, sinon je le relis à un domaine. Pour la presse spécialisée, la presse, les lois je vais adopter une démarche similaire.
```{r}
designation_recoding <- Vectorize(function(type, Auteur_Institution, Institution_Domaine, freq_auteur, freq) {
if (type == "classic" && freq_auteur >= 2) {
  return(Auteur_Institution)
} else if (type == "collectif") {
  return("Collectif")
} else if (type == "presse spécialisée" && freq < 2) {
  return("Presse Spécialisée diverse")
} else if (type == "presse" && freq < 2) {
  return("Presse diverse")
} else if (type == "loi" && freq < 2) {
  return("Loi diverse")
} else if (type == "comité d'éthique" && freq < 2) {
  return("Comité d'éthique divers")
} else if (type == "autre pays" && freq < 2) {
  return("Comité d'éthique divers")
} else {
  return(Institution_Domaine)
}
})


metadata_avis <- open_metadata()%>%
  filter(rapporteurs != "NA")

metadata_citation <- read_excel("../data/raw/collected_metadata/metadata_citation.xlsx", 
    col_types = c("text", "text", "skip", 
        "text", "text", "text", "skip", "skip", 
        "skip"))%>%
  separate_rows(cité_dans_avis_num, sep = ";")%>%
  separate_rows(Institution_Domaine, sep = ";")%>%
  group_by(Auteur_Institution)%>%
  mutate(freq_auteur = n())%>%
  ungroup()%>%
  group_by(Institution_Domaine)%>%
  mutate(freq_institution = n())%>%
  ungroup()%>%
  mutate(type = ifelse(is.na(type),"",type),
         type = ifelse(type %in% c("livre","article","colloque","thèse"),"académique",type),
         Désignation = designation_recoding(type,Auteur_Institution, Institution_Domaine, freq_auteur,freq_institution)
         )

ccne_citations <- metadata_citation%>%
  group_by(Désignation)%>%
  summarise(count = n())

reseau_citation <- metadata_citation%>%
  rename(Avis = cité_dans_avis_num)%>%
  group_by(Avis,Désignation)%>%
  summarise(count = n())

```

```{r}
# regardons combien chaque "classic" est cité
# metadata_citation%>%
#   filter(type  == "classic")%>%
#   group_by(Auteur_Institution)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

# # regardons combien chaque "classic" est cité
# metadata_citation%>%
#   filter(type  == "presse")%>%
#   group_by(Institution_Domaine)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

# metadata_citation%>%
#   filter(type  == "presse spécialisée")%>%
#   group_by(Institution_Domaine)%>%
#   summarise(count = n())%>%
#   arrange(desc(count))

metadata_citation%>%
  filter(type  == "loi")%>%
  group_by(Institution_Domaine)%>%
  summarise(count = n())%>%
  arrange(desc(count))
```


```{r, width = 20, heigh = 20}
# Count the number of citations for each Désignation
citation_counts <- metadata_citation %>%
  group_by(Désignation) %>%
  summarise(citation_count = n(), .groups = 'drop')

# Create edge list for the network graph
edge_list_macro <- metadata_citation %>%
  mutate(source = "CCNE") %>%
  select(source, target = Désignation) %>%
  group_by(source, target) %>%
  summarise(weight = n(), .groups = 'drop')

# Create the network graph using igraph
macro_citations_network <- graph_from_data_frame(edge_list_macro, directed = TRUE)

# Add node attributes
V(macro_citations_network)$citation_count <- citation_counts$citation_count[match(V(macro_citations_network)$name, citation_counts$Désignation)]
V(macro_citations_network)$type <- ifelse(V(macro_citations_network)$name == "CCNE", "Source", "Target")

# Convert igraph object to ggnetwork-compatible format
network_data <- ggnetwork(macro_citations_network)

# Plot the network using ggnetwork and ggplot2
ggplot(network_data, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_edges(aes(), color = "grey50") +
  geom_nodes(aes(size = citation_count)) +
  geom_nodelabel_repel(aes(label = name), box.padding = unit(0.35, "lines")) +
  theme_blank() +
  scale_size_continuous(range = c(3, 10)) +
  ggtitle("Citation Network from CCNE to Institution/Auteur/Genre")
```

