---
title: "Résumé citations CCNE"
author: "Léopold MAURICE"
date: "2024-07-16"
project: CCNE
supervision: Pr. Emmanuel Didier, CMH/ENS/EHESS
format:
  html:
    toc: true
    number-sections: true
    colorlinks: true
    geometry:
      - top=10mm
      - left=20mm
      - right=20mm
      - bottom=10mm  
      - heightrounded
    highlight-style: github
    fontfamily: libertinus
    documentclass: report
    fig-width: 12
    fig-height: 9
  pdf:
    documentclass: article
    geometry: [left=1in, right=1in, top=1in, bottom=1in]
    fontsize: 11pt
    keep-tex: true
    toc: true
    toc-depth: 2
    number-sections: true
execute:
  eval: true
  message: false
  warning: false
  echo: false
  output: true
  error: true
editor: source
---

```{r}
require(pacman,quietly = T)

pacman::p_load(arrow,
               tidyverse,
               reshape2,
               stringr,
               DT,
               kable,

               stats,
               rstatix,
               
               ggplot2,
               gridExtra,
               ggprism,
               ggpubr,
               ggcorrplot,
               ggraph,
               ggnetwork,
               ggrepel,
               viridis,
               RColorBrewer,
               paletteer,
               
               igraph,
               tidygraph,
               #sna,
               #network,
               
               networkD3,
               leaflet,
               
               rmarkdown,
               knitr,
               
               openxlsx)

source("helpers/database_creation.R")
source("helpers/figures.R")

save_figures = T
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 0.1, 1)
symbols = c("****", "***", "**", "*", "•","ns")
significance = c("p < 0.0001", "p < 0.001", "p < 0.01", "p < 0.05", "p < 0.1", "p>0.1")
signif_caption_text <- paste("Significance levels:\n", paste(symbols, ":", significance, collapse = ", "))

```

# Résumé de la méthodologie et des données

On a collecté l'ensemble des citations dans les 144 avis du CCNE. Chaque citation a été mise en forme de la façon suivante : dans quel avis elle a été utilisée, quel est son auteur moral (ministère, sénat etc.) ou son domaine (article médical par exemple). De plus, pour rendre la lecture plus aisée, j'ai découpé chaque citation en différentes catégories :  
- Auteurs : personne suffisamment importante dont le nom a été relevé en propre au moment de la collecte. Cela concerne aussi bien des classiques (philosophes antiques, ou modernes d'avant le 20ème s.), que les auteurs les plus cités au cours des avis (Ricoeur, Canguilhem) que les membres du CCNE cités au sein des avis.
- Autorités : Autorités administratives publics ou indépendantes, au sens de la loi de 2016, qui un pouvoir de contrôle effectif.
- Comité d'éthique : Tout autre comité d'éthique, français ou d'un autre pays.
- Comparaison pays : Pays qui font l'objet d'une comparaison dans l'un des avis.
- Etat : Ministères, Parlement, Président, Premier Ministre, Administration (à l'exclusion des autorités indépendantes et/ou consultatives)
- Forums : Organisations consultatives associées à une posture de conseils au gouvernement et d'expertise (Forums Hybride, Callon et al. 2001) comme le CCNE, les académies ou l'Ordre des médecins.
- Loi : Codes de lois et lois votées au Parlement, regroupées par thématique.
- Organisations Internationales : Toutes les organisations internationales incluant : institutions européennes (de l'UE ou Conseil de l'Europe), onusiennes (on a différencié l'OMS des autres, regroupées sous le terme ONU), économiques/financières (OCDE, FMI, Banque Mondiale), olympiques (CIO).
- Presse : Journeaux de la presse quotidienne et bulletins spécialisés (médicaux ou en santé publique).
- Science, littérature : livres et articles scientifiques, Oeuvres de fictions ou autobiographiques, regroupés par domaine.
- Société : Société civile, regroupée dans des catégories simples : collectifs, syndicats, religion, fondations caritatives

En plus des visualisations présentes [dans l'annexe numérique du mémoire](https://leopoldmaurice.shinyapps.io/CCNE/), je présente ici les résultats les plus agrégés des citations. Pour une facilité de lecture, plutôt que parler citation par citation, ou même catégorie par catégorie, j'ai regroupé les citations entre elles, selon une logique qui dépend de la catégorie. Ainsi les lois ont été regroupé par leur thématique (lois de bioéthique, lois sur l'égalité des droits, sur la santé publique etc.), pour la presse un critère de fréquence a été attribué pour montrer les titres les plus importants et regroupés les autres. A l'avenir, je parlerais de noms détaillés pour la forme collectée et de noms simplifiés pour la forme regroupée.

```{r}
designation_recoding <- Vectorize(function(type, Auteur_Institution, Institution_Domaine, freq_auteur, freq) {
if (type == "classic") {
  return(Auteur_Institution)
} else {
  return(Institution_Domaine)
}
})


metadata_avis <- open_metadata()

metadata_citation <- read.xlsx("../data/raw/collected_metadata/metadata_citation.xlsx", 
                               colNames = TRUE,
                               cols = c(1, 2, 4, 5, 6))%>%
  separate_rows(cité_dans_avis_num, sep = ";")%>%
  separate_rows(Institution_Domaine, sep = ";")%>%
  group_by(Auteur_Institution)%>%
  mutate(freq_auteur = n())%>%
  ungroup()%>%
  group_by(Institution_Domaine)%>%
  mutate(freq_institution = n())%>%
  ungroup()%>%
  mutate(type = ifelse(is.na(type),"",type),
         type = ifelse(type %in% c("livre","article","colloque","thèse"),"académique",type),
         Désignation = designation_recoding(type,Auteur_Institution, Institution_Domaine, freq_auteur,freq_institution)
         )

recat <- read_excel("../data/intermediate/reseau/recategorize_designation.xlsx")

metadata_citation <- metadata_citation%>%
  left_join(recat, by = "Désignation")%>%
  rename(Désignation_collectée = Désignation,
         Désignation = Désignation_méso)

color_pal_groupe = c( "#6CC7B3","#285291","#9D3A5E","#579125","#0F0F5C","#91188F","#0E405C", "#915B11" , "#4F2B91", "#91181E","#0B5C2D","#BD6345")

```

```{r}

# code de vérification

metadata_citation%>%
  select(Citation, cité_dans_avis_num,Désignation_collectée,Désignation_ego,Désignation,Groupe)%>%
  filter(is.na(Désignation_ego)|is.na(Désignation)|is.na(Groupe)) -> trous

metadata_citation%>%
  group_by(Groupe,Désignation,Désignation_ego)%>%
  summarise(count_précis = n())%>%
  group_by(Groupe,Désignation)%>%
  mutate(count_meso = sum(count_précis))%>%
  ungroup()-> fréquence_désignations
```
# Citations les plus importantes sur l'ensemble de l'histoire du CCNE

Les deux graphiques suivants permettent de se donner une idée des citations les plus importantes du CCNE sur la totalité des quarantes dernières années. Ces deux graphiques construis sur le même principe : chaque citation (avec son nom simplifié) est relié à sa catégorie, elle même relié au CCNE, dans une relation hiérarchique.

On y trouve les résultats suivants : 
- Auteurs : les membres du CCNE sont la catégories d'individus la plus cité avec 17 citations. Ensuite, ce sont les philosophes pré modernes mais dont aucun n'est cité plus d'une fois au cours des 144 avis (Spninoza, Nietzsche). Deux auteurs de la seconde moitié du XXème s. sortent vraiment du lot : Canguilhem et Ricoeur. Il faut quand même noté que le nombre de citations total de ces auteurs est très faible par rapport à la masse de citations scientifiques et littéraires, comme on peut le comparer avec les citations 'Science, littérature'.
- Science, littérature : en effet les sciences médicales sont largement les plus cités, avec un total de 1019 articles ou livres cités. La majorité des avis citent au moins un article médical, biologique, ou psychiatries/psychologies.En seconde place, les sciences humaines sont autant citées que la philosophie et l'éthique. Le droit, l'économie et l'écologie sont assez minoritaires : seulement 21 avis citent des ouvrages de droit, et seuls 16 des articles d'économie et seulement 2 avis citent des articles d'écologie (avis 133 par exemple). On a aussi quelques références à des oeuvres de fiction ou autobiographiques. En particulier, sur les questions "sensibles" comme l'autonisme, sur une période récente à partir de l'avis 102, des oeuvres autobiographiques écrites par des personnes sur le spectre autiste sont cités : c'est une première de tout les avis.
On peut conclure qu'il n'y a pas consciemment de la part des membres du CCNE une référence explicite à certains philosophes. Canguilhem et Ricoeur sont les plus cités, mais combiné ils ne dépassent pas la douzaine d'avis faisant directement référence à eux. Le CCNE semble plutôt composé ses avis, de façon pragmatique,  selon l'idée énoncé dès les premiers avis. Les citations scientifiques sont à l'image des membres mobilisés du CCNE : biomédical et sciences humaines. Par contre, il est intéressant de noter que le droit et l'économie sont très peu mobilisés : sciences de gouvernement c'est par leurs étatiques (tribunaux, rapports) qu'on peut y déceler leur influence, plutôt que par le pôle académique. 
- Autorités : Les autorités les plus cités sont très largement les autorités de sécurité sanitaire (AFSS) en particulier ce qui est actuellement dénommé comme l'Agence de la biomédecine (ABM) et la Haute Autorité de Santé (HAS). Au total 38 avis citent une expertise d'une des AFSS, pour un total de 67 citations. Le conseil d'Etat est largement l'institution la plus citée : 19 avis y font référence pour 27 citations. Cela vient probablement des forts historiques liens entre les deux institutions. 
- Forums : Sans trop de surprise les forums les plus citées sont l'académie nationale de médecine, l'ordre des médecins, le conseil national du Sida. Le reste est composé du CESE, du défenseur des droits, et de divers observatoires (OFDT, ONFV, CNCDH).
- Etat : Le CCNE cite principalement les directions des ministères sociaux, et rapports commandités en leurs noms, puis le parlement (Assemblée nationale, Sénat, OPCEST) et pour finir les tribunaux (Cour de cassation et autres tribunaux). Le premier ministre ou le président sont plutôt rares. Le Premier ministre dans le cas de rapports qu'il a commandité, le président à l'occasion des lois de bioéthique (Etats généraux de la bioéthique).

- Comité d'éthique : Principalement le Groupe d'Ethique Européen (GEE) mis en place par la Commission Européenne, les espaces éthiques régionaux, le comité d'éthique du CNRS (COMETS/COPE) et le comité d'éthique de la Nuffield Foundation.
- Comparaison pays : Les institutions américaines et britanniques sont largement les plus citées (respectivement 36 et 20 avis qui les citent), viennent ensuite les pays européens (regroupés ils apparaissent dans une quinzaine d'avis, avec la Suisse et la Belgique en premier lieu). USA : domination médicale, Suisse : francophone et leader pharmaceutique, Belgique : Fr, UK : ?. 

- Loi : Codes de lois et lois votées au Parlement, regroupées par thématique. Code de la santé publique, code civil, les lois de bioéthique (particulièrement 1994 et 2004) et surtout la loi Huriet la plus citées en elle même. Puis viennent ensuite les lois thématiques : Egalités des droits, santé publique, fin de vie, RGPD/informatique et libertés.

- Organisations Internationales : UE > ONU > OMS. Quelques traités mais pas tant que ça : 5 avis avec la convention d'Oviedo et 9 avec la déclaration d'Helsinki, 6 pour le code de Nuremberg.

- Presse : Pas mal de presse spécialisée, mais surtout beaucoup le monde 17 avis qui le citent.
- Société : Principalement des collectifs.


```{r}
#| eval: false
# Load necessary libraries
library(dplyr)
library(networkD3)

# Count the number of citations for each Désignation
citation_counts <- metadata_citation %>%
  group_by(Désignation, Groupe) %>%
  summarise(citation_count = n(), .groups = 'drop')%>%
  mutate(Groupe = gsub(" ", "\n", Groupe),
         Nombre_formate = if_else(Groupe == "Sciences, littérature",
                             str_pad(citation_count, 4, pad = "0"),
                             str_pad(citation_count, 2, pad = "0")),
         Désignation = paste(Nombre_formate,Désignation,sep = "|"))

# Add a row for the CCNE node
citation_counts <- citation_counts %>%
  add_row(Désignation = "CCNE", Groupe = "CCNE", citation_count = sum(citation_counts$citation_count))

# Organize data into a hierarchical structure
create_hierarchy <- function(group_name, citations) {
  list(
    name = group_name,
    children = lapply(citations, function(citation) {
      list(name = citation, size = citation_counts %>% filter(Désignation == citation) %>% pull(citation_count))
    })
  )
}

groups <- unique(citation_counts$Groupe[citation_counts$Groupe != "CCNE"])
hierarchy <- list(
  name = "CCNE",
  children = lapply(groups, function(group) {
    citations <- citation_counts %>% filter(Groupe == group) %>% pull(Désignation)
    create_hierarchy(group, citations)
  })
)

# Plot the hierarchical radial network
radialNetwork(List = hierarchy,
              fontSize = 20
              )

```

```{r, fig.width= 12, fig.height= 12}
# Count the number of citations for each Désignation
citation_counts <- metadata_citation %>%
  group_by(Désignation, Groupe) %>%
  summarise(citation_count = n(), .groups = 'drop') %>%
  mutate(Groupe = gsub(" ", "\n", Groupe),
         Nombre_formate = if_else(Groupe == "Sciences, littérature",
                             str_pad(citation_count, 4, pad = "0"),
                             str_pad(citation_count, 2, pad = "0")),
         Désignation = paste(Nombre_formate, Désignation, sep = "|"))

# Prepare edges and nodes for igraph
edges <- bind_rows(
  citation_counts %>%
    mutate(from = Groupe, to = Désignation)%>%
    select(from,to),
  citation_counts %>%
    group_by(Groupe)%>%
    summarise(from = "CCNE")%>%
    rename(to = Groupe)
)

nodes <- bind_rows(
  citation_counts %>%
    distinct(Désignation,citation_count, Groupe) %>%
    rename(name = Désignation)%>%
    select(name,citation_count,Groupe)%>%
    mutate(cercle = 3),
  citation_counts %>%
    group_by(Groupe) %>%
    summarise(citation_count = sum(citation_count))%>%
    mutate(name = Groupe)%>%
    select(name,citation_count, Groupe)%>%
    mutate(cercle = 2)
)%>%
  add_row(name = "CCNE", citation_count = sum(citation_counts$citation_count), cercle = 1, Groupe = "CCNE")%>%
  mutate( leaf = (cercle == 3))

# Create igraph object
graph <- graph_from_data_frame(edges, vertices = nodes, directed = TRUE)

# Convert to a tree structure with CCNE as the root
layout <- create_layout(graph, layout = 'focus', focus = name == "CCNE")

# Plot using ggraph
# Create layout
layout <- create_layout(graph, layout = 'dendrogram', circular = TRUE)

# Function to calculate text angle
node_angle <- function(x, y) {
  angle <- atan2(y, x) * 180 / pi
  angle <- ifelse(angle < 0, angle + 360, angle)
  ifelse(angle > 90 & angle < 270, angle + 180, angle)
}

node_true_angle <- function(x,y) {
  angle <- atan2(y, x) * 180 / pi
  angle <- ifelse(angle < 0, angle + 360, angle)
  angle
}

# Plot using ggraph
ggraph(layout) +
  #ggforce::geom_circle(aes(x0 = 0, y0 = 0, r = r), data.frame(r = 1:2), colour = 'grey') + 
  geom_edge_diagonal() +
  geom_node_point(aes(size = log10(citation_count + 1), colour = Groupe)) +
  geom_node_label(aes(label = name, angle = ifelse(leaf,node_angle(x, y),0), 
                      hjust = ifelse(leaf,ifelse(node_true_angle(x, y) > 90 & node_true_angle(x, y) < 270, 1, 0),0)
                   ),
                  size = 3) +
  theme_void() +
  scale_colour_manual(values = color_pal_groupe) +
  coord_fixed(clip = 'off') +
  guides(size = FALSE, colour = FALSE)+
  theme(
  plot.margin = unit(c(6, 6, 6, 6), "cm"),
  legend.title = element_text(size = 10),
  legend.position = "top",
  legend.margin = margin(0, 0, -30, 0),
  legend.box.margin = margin(0, 0, 20, 0))+
  labs(caption = "Graphique de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144 et leurs citations.\nDonnées : citations collectées par l'auteur.\nLecture: Les lois de bioéthique, dans la catégorie Loi, sont citées 26 fois dans les avis.")
```

```{r}
#| eval: false

# Convertir en structure d'arbre avec CCNE comme racine
layout <- create_layout(graph, layout = 'cactustree')

# Plot avec ggraph
ggraph(layout) +
  geom_node_circle(aes(size = log10(citation_count+1), fill = Groupe)) +
  theme_void() +
  scale_fill_manual(values = color_pal_groupe) +
  coord_fixed(clip = 'off') +
  guides(size = FALSE, colour = FALSE) +
  theme(
    plot.margin = unit(c(3, 3, 3, 6), "cm"),
    legend.title = element_text(size = 10),
    legend.position = "top",
    legend.margin = margin(0, 0, -30, 0),
    legend.box.margin = margin(0, 0, 20, 0)
  )

```
```{r}
#| eval: false

# Define custom breaks for the bins
custom_breaks <- c(10,50, 100, 500, 1500)

layout <- create_layout(graph, 'circlepack', weight = log10(citation_count+1), sort.by = citation_count)

# Create the circular packing graph with a radius legend and custom color bins
set.seed(1968)
ggraph(layout) +
  geom_node_circle(aes(fill = Groupe, x0 = x, y0 = y, colour = citation_count), size = 1.3, show.legend = TRUE) +
  scale_color_stepsn(name = "Nombre de citations", colours = paletteer::paletteer_d("beyonce::X34",6), breaks = custom_breaks) +
  scale_fill_manual(values = color_pal_groupe) +
  theme_void(base_size = 20) +
  coord_fixed()+
  theme(
    legend.title = element_text(size = 10),    # Adjust legend title size
    legend.text = element_text(size = 8),      # Adjust legend text size
    legend.key.size = unit(0.5, "lines")       # Adjust legend key size
  )
```
```{r}
#| eval: false

library(ggraph)
library(tidygraph)

# Visualisation de base du graphe
ggraph(graph, layout = 'fr') + # layout 'fr' pour Fruchterman-Reingold, une mise en page de base
  geom_edge_link(aes(edge_alpha = ..index..), show.legend = FALSE) + # Affiche les arêtes avec alpha proportionnel à l'index
  geom_node_point(aes(color = Groupe, size = citation_count), show.legend = TRUE) + # Affiche les nœuds avec des tailles proportionnelles et colorés par groupe
  theme_void() + # Thème vide pour une visualisation claire
  theme(
    legend.position = "right", # Position de la légende à droite
    legend.title = element_text(size = 10), # Taille du titre de la légende
    legend.text = element_text(size = 8) # Taille du texte de la légende
  )

```

```{r}
#| eval: false

color_pal_groupe_sans_ccne = c("#285291","#579125","#0F0F5C","#91188F","#0E405C", "#915B11" , "#4F2B91", "#91181E","#0B5C2D","#BD6345")

metadata_citation %>%
  group_by(Désignation, Groupe) %>%
  summarise(citation_count = n(), .groups = 'drop')%>%
  filter(Groupe != "Science, littérature")%>%
  ggbarplot(x = "Désignation", y = "citation_count",facet.by = "Groupe", color = "Groupe", fill = "Groupe")+
  theme_ready()+
  scale_color_manual(values = color_pal_groupe_sans_ccne)+
  scale_fill_manual(values = color_pal_groupe_sans_ccne)
```



# Nombre de citations au cours du temps

```{r, fig.width=21, fig.height=9.9}
# Ajouter une colonne président à metadata_avis
metadata_avis <- metadata_avis %>%
  mutate(president = case_when(
    num >= 1 & num <= 28 ~ "Bernard (83-91)",
    num >= 29 & num <= 60 ~ "Changeux (92-99)",
    num >= 61 & num <= 103 ~ "Sicard (00-08)",
    num >= 104 & num <= 115 ~ "Grimfeld (09-11)",
    num >= 116 & num <= 124 ~ "Ameisen (12-15)",
    num >= 125 & num <= 144 ~ "Delfraissy (16-)"
  ))

# Assurez-vous que les présidents sont dans le bon ordre
metadata_avis$president <- factor(metadata_avis$president, levels = c(
  "Bernard (83-91)", "Changeux (92-99)", "Sicard (00-08)", "Grimfeld (09-11)", "Ameisen (12-15)", "Delfraissy (16-)"
))

all_combinations <- expand.grid(
  num = 1:144,
  Catégorie = unique(metadata_citation$Groupe)
)%>%
  mutate(num = as.numeric(num))

# Graphique
all_combinations %>%
  left_join(metadata_citation %>%
              rename(num = cité_dans_avis_num, Catégorie = Groupe) %>%
              group_by(num, Catégorie) %>%
              mutate(num = as.numeric(num)) %>%
              summarise(nb_citation = n(), .groups = 'drop'),
            by = c("num", "Catégorie")) %>%
  replace_na(list(nb_citation = 0))%>%
  bind_rows(metadata_avis %>%
              # filter(!is.na(citations_autres_avis)) %>%
              separate_rows(citations_autres_avis , sep = ";") %>%
              mutate(Catégorie = "CCNE") %>%
              group_by(num, Catégorie) %>%
              summarise(nb_citation = n())) %>%
  left_join(metadata_avis, by = "num") -> plot_data_nb_citations
plot_data_nb_citations%>%
  group_by(Catégorie) %>%
  mutate(rank = dense_rank(desc(nb_citation))) %>%
  ungroup() %>%
  mutate(label = ifelse(rank <= 3, as.character(num), ""))%>%
  filter(Catégorie != "Science, littérature") %>%
  ggscatter(x = "date", y = "nb_citation", facet.by = "Catégorie", color = "president", xlab = "Temps",ylab = "Nombre de citations (multiple par avis)", caption= "Graphique de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144.\nDonnées collectées par l'auteur.\nLecture: Le nombre de citations dans les avis du CCNE\nsemblent augmenter dans le cas où ces citations renvoient\naux institutions gouvernementales, aux autorités indépendantes et dans une moindre mesure à la société civile.\nLe fait le plus notable est la citation devient quasiment systématique dans toutes les catégories, en particulier sous Delfraissy.\nLa loi est le domaine d'exception qui a quasiment toujours été cité dès le tout premier avis.") +
  scale_color_prism("colorblind_safe")+
  theme_ready(text_size = 25)+
  geom_text_repel(aes(label = label, color = president), max.overlaps = Inf)
```

```{r, fig.width=21, fig.height=9.9}
plot_data_nb_citations%>%
  mutate(label = ifelse(nb_citation>50,num,""))%>%
  filter(Catégorie== "Science, littérature")%>%
  ggscatter(x = "date", y = "nb_citation", facet.by = "Catégorie", color = "president", xlab = "Temps",ylab = "Nombre de citations (multiple par avis)", caption= "Graphique de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144.\nDonnées collectées par l'auteur.\nLecture: En moyenne deux pics d'inflations du nombre de citations scientifiques peuvent être identifier :\nà la fin de la présidence Changeux et au cours de la présidence Delfraissy.") +
  scale_color_prism("colorblind_safe")+
  theme_ready(text_size = 25)+
  geom_text_repel(aes(label = label, color = president), max.overlaps = Inf)
```

```{r, fig.width=10.5, fig.height=7}
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(ggrepel)

# Créer un dataframe avec toutes les combinaisons possibles de num et Désignation
all_combinations <- expand.grid(
  num = 1:144,
  Désignation = c("Biologie", "Economie", "Ethique & philo", "SHS", "psycho&neuro", "Médical")
)%>%
  mutate(num = as.numeric(num))

# Ajouter les pairs manquants et assigner 0 aux nb_citation manquants
plot_data_nb_citations <- all_combinations %>%
  left_join(metadata_citation %>%
              rename(num = cité_dans_avis_num, Catégorie = Groupe) %>%
              filter(Catégorie == "Science, littérature") %>%
              group_by(num, Désignation) %>%
              mutate(num = as.numeric(num)) %>%
              summarise(nb_citation = n(), .groups = 'drop'),
            by = c("num", "Désignation")) %>%
  replace_na(list(nb_citation = 0)) %>%
  left_join(metadata_avis, by = "num")

# Identifier le top 5 des nb_citation pour chaque Désignation
plot_data_nb_citations <- plot_data_nb_citations %>%
  group_by(Désignation) %>%
  mutate(rank = dense_rank(desc(nb_citation))) %>%
  ungroup() %>%
  mutate(label = ifelse(rank <= 3, as.character(num), ""))

# Filtrer les Désignations désirées
plot_data_nb_citations <- plot_data_nb_citations %>%
  filter(Désignation %in% c("Biologie", "Economie", "Ethique & philo", "SHS"))

# Graphique
ggscatter(plot_data_nb_citations, x = "date", y = "nb_citation", facet.by = "Désignation", color = "president",
          xlab = "Temps", ylab = "Nombre de citations (multiple par avis)",
          caption = "Graphique de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144.\nDonnées collectées par l'auteur.\nLecture: l'usage de référence issu des SHS, de philo ou l'éthique\ndevient réellement systématique au milieu de la présidence Ameisen, au milieu des années 2010.") +
  scale_color_prism("colorblind_safe") +
  theme_ready(text_size = 13) +
  geom_text_repel(aes(label = label, color = president), max.overlaps = Inf) +
  geom_point(data = plot_data_nb_citations, aes(x = date, y = nb_citation, color = president))

```

```{r, fig.width=10.5, fig.height=7}
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(ggrepel)

# Créer un dataframe avec toutes les combinaisons possibles de num et Désignation
all_combinations <- expand.grid(
  num = 1:144,
  Désignation = c("Biologie", "Economie", "Ethique & philo", "SHS", "psycho&neuro", "Médical")
)%>%
  mutate(num = as.numeric(num))

# Ajouter les pairs manquants et assigner 0 aux nb_citation manquants
plot_data_nb_citations <- all_combinations %>%
  left_join(metadata_citation %>%
              rename(num = cité_dans_avis_num, Catégorie = Groupe) %>%
              filter(Catégorie == "Science, littérature") %>%
              group_by(num, Désignation) %>%
              mutate(num = as.numeric(num)) %>%
              summarise(nb_citation = n(), .groups = 'drop'),
            by = c("num", "Désignation")) %>%
  replace_na(list(nb_citation = 0)) %>%
  left_join(metadata_avis, by = "num")

# Identifier le top 5 des nb_citation pour chaque Désignation
plot_data_nb_citations <- plot_data_nb_citations %>%
  group_by(Désignation) %>%
  mutate(rank = dense_rank(desc(nb_citation))) %>%
  ungroup() %>%
  mutate(label = ifelse(rank <= 3, as.character(num), ""))

# Filtrer les Désignations désirées
plot_data_nb_citations <- plot_data_nb_citations %>%
  filter(Désignation %in% c("Médical"))

# Graphique
ggscatter(plot_data_nb_citations, x = "date", y = "nb_citation", color = "president",
          title = "Publications médicales",
          xlab = "Temps", ylab = "Nombre de citations (multiple par avis)",
          caption = "Graphique de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144.\nDonnées collectées par l'auteur.\nLecture: Pour les citations médicales, on voit une inflation jusqu'à la fin de la présidence Changeux et une systématisation au cours du mandat Delfraissy.\nAvant Grimfeld, les médecins pouvaient affirmer sans cité dans la majorité des avis.") +
  scale_color_prism("colorblind_safe") +
  theme_ready(text_size = 13) +
  geom_text_repel(aes(label = label, color = president), max.overlaps = Inf) +
  geom_point(data = plot_data_nb_citations, aes(x = date, y = nb_citation, color = president))

```

# Tableau récapitulatif

```{r}

# Créer un dataframe avec toutes les combinaisons possibles de num et Désignation
all_combinations <- expand.grid(
  num = 1:144,
  Catégorie = unique(metadata_citation$Groupe)
)%>%
  mutate(num = as.numeric(num))

all_combinations %>%
  left_join(metadata_citation %>%
              rename(num = cité_dans_avis_num, Catégorie = Groupe) %>%
              group_by(num, Catégorie) %>%
              mutate(num = as.numeric(num)) %>%
              summarise(nb_citation = n(), .groups = 'drop'),
            by = c("num", "Catégorie")) %>%
  replace_na(list(nb_citation = 0))%>%
  left_join(metadata_avis, by = "num") -> citations_by_cat

percentage_by_cat<- citations_by_cat%>%
  mutate(is_cited = (nb_citation > 0),
         total_avis = 144)%>%
  group_by(Catégorie)%>%
  summarise(Pourcentage = 100*sum(is_cited)/144)%>%
  rename(`Ensemble des avis` = Pourcentage)

percentage_by_cat_pres <- citations_by_cat%>%
  mutate(is_cited = (nb_citation > 0),
         total_avis = 144)%>%
  group_by(Catégorie, president)%>%
  summarise(Pourcentage = sum(is_cited))%>%
  mutate(total = case_when(
    president == "Bernard (83-91)"  ~ 28,
    president == "Changeux (92-99)"  ~ 32,
    president == "Sicard (00-08)" ~ 43,
    president == "Grimfeld (09-11)" ~ 12,
    president == "Ameisen (12-15)" ~ 9,
    president == "Delfraissy (16-)" ~ 20
  ),
  Pourcentage = 100*Pourcentage/total)%>%
  select(Catégorie,president,Pourcentage)%>%
  pivot_wider(names_from = president, values_from = Pourcentage)

percentage_cat <- left_join(percentage_by_cat,percentage_by_cat_pres, by= "Catégorie")

percentage_cite_toutes_cat <- citations_by_cat%>%
  mutate(is_cited = (nb_citation > 0))%>%
  group_by(num)%>%
  summarise(is_cited = all(is_cited))%>%
  mutate(president = case_when(
    num >= 1 & num <= 28 ~ "Bernard (83-91)",
    num >= 29 & num <= 60 ~ "Changeux (92-99)",
    num >= 61 & num <= 103 ~ "Sicard (00-08)",
    num >= 104 & num <= 115 ~ "Grimfeld (09-11)",
    num >= 116 & num <= 124 ~ "Ameisen (12-15)",
    num >= 125 & num <= 144 ~ "Delfraissy (16-)"
  ))

percentage_cite_toutes_cat_tout_ccne <- 100*sum(percentage_cite_toutes_cat$is_cited)/144

percentage_cite_toutes_cat_by_pres <- percentage_cite_toutes_cat%>%
  group_by(president)%>%
  summarise(Pourcentage = sum(is_cited))%>%
  mutate(total = case_when(
    president == "Bernard (83-91)"  ~ 28,
    president == "Changeux (92-99)"  ~ 32,
    president == "Sicard (00-08)" ~ 43,
    president == "Grimfeld (09-11)" ~ 12,
    president == "Ameisen (12-15)" ~ 9,
    president == "Delfraissy (16-)" ~ 20
  ),
  Pourcentage = 100*Pourcentage/total)%>%
  select(president,Pourcentage)%>%
  pivot_wider(names_from = president, values_from = Pourcentage)%>%
  mutate(`Ensemble des avis` = percentage_cite_toutes_cat_tout_ccne,
         Catégorie = "Cite toutes les catégories")

percentage_cite_toutes_sauf_n_cat <- function(n) {
  cat_to_cite = length(unique(citations_by_cat$Catégorie))-n
  percentage_cite_sauf_n_cat <- citations_by_cat%>%
    mutate(is_cited = (nb_citation > 0))%>%
    group_by(num)%>%
    summarise(is_cited = sum(is_cited))%>%
    mutate(president = case_when(
      num >= 1 & num <= 28 ~ "Bernard (83-91)",
      num >= 29 & num <= 60 ~ "Changeux (92-99)",
      num >= 61 & num <= 103 ~ "Sicard (00-08)",
      num >= 104 & num <= 115 ~ "Grimfeld (09-11)",
      num >= 116 & num <= 124 ~ "Ameisen (12-15)",
      num >= 125 & num <= 144 ~ "Delfraissy (16-)"
    ),
    is_cited = (is_cited>=cat_to_cite))
  
  percentage_cite_sauf_n_cat_ensemble <- 100*sum(percentage_cite_sauf_n_cat$is_cited)/144
  
  percentage_cite_sauf_n_cat_by_pres <- percentage_cite_sauf_n_cat%>%
    group_by(president)%>%
    summarise(Pourcentage = sum(is_cited))%>%
    mutate(total = case_when(
      president == "Bernard (83-91)"  ~ 28,
      president == "Changeux (92-99)"  ~ 32,
      president == "Sicard (00-08)" ~ 43,
      president == "Grimfeld (09-11)" ~ 12,
      president == "Ameisen (12-15)" ~ 9,
      president == "Delfraissy (16-)" ~ 20
    ),
    Pourcentage = 100*Pourcentage/total)%>%
    select(president,Pourcentage)%>%
    pivot_wider(names_from = president, values_from = Pourcentage)%>%
    mutate(`Ensemble des avis` = percentage_cite_sauf_n_cat_ensemble,
           Catégorie = paste("Cite",cat_to_cite,"des",length(unique(citations_by_cat$Catégorie)),"catégories"))
  
  return(percentage_cite_sauf_n_cat_by_pres)
}

# Calculer les pourcentages pour toutes les catégories sauf une, deux et trois
percentage_sauf_1_cat <- percentage_cite_toutes_sauf_n_cat(1)
percentage_sauf_2_cat <- percentage_cite_toutes_sauf_n_cat(2)
percentage_sauf_3_cat <- percentage_cite_toutes_sauf_n_cat(3)
percentage_sauf_4_cat <- percentage_cite_toutes_sauf_n_cat(4)

final_table <- bind_rows(percentage_cat,
                         percentage_cite_toutes_cat_by_pres,
                           percentage_sauf_1_cat,
                           percentage_sauf_2_cat,
                           percentage_sauf_3_cat,
                         percentage_sauf_4_cat)%>%
  select(Catégorie,`Bernard (83-91)`,`Changeux (92-99)`,`Sicard (00-08)`,`Grimfeld (09-11)`,`Ameisen (12-15)`,`Delfraissy (16-)`)%>%
   mutate(across(c(`Bernard (83-91)`,`Changeux (92-99)`,`Sicard (00-08)`,`Grimfeld (09-11)`,`Ameisen (12-15)`,`Delfraissy (16-)`), ~ round(., 1)))

# Afficher le tableau avec DT
# datatable(final_table, extensions = 'Buttons', options = list(
#   dom = 'Bfrtip',
#   buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
# ))

kable(final_table, caption = "Tableau de l'auteur.\nChamps : Tous les avis numérotés publiés par le CCNE jusqu'au 144 et leurs citations.\nDonnées : citations collectées par l'auteur.\nLecture: Sous Bernard (83-91), 3.6% des avis publiés sous son mandat comprenait une citation d'un auteur remarquable.\nInterprétation : Au cours du temps, le nombre de catégorie mobilisées augmentent :\non passe d'une réflexion basée sur la loi, la science biomédicale et les organisations internationales à\nun moment où de nouvelles formes de légitimités sont mobilisés : expertises non directement académiques, rapports administratifs, publications de collectifs, autorités indépendantes, comités consultatifs.")
```






```{r}
taille_avis <- read.csv("../data/raw/collected_metadata/taille_avis.csv")
```

```{r}
#| eval: false

metadata_citation%>%
  rename(num = cité_dans_avis_num, Catégorie = Groupe)%>%
  group_by(num, Catégorie)%>%
  mutate(num = as.numeric(num))%>%
  summarise(nb_citation = n())%>%
  bind_rows(metadata_avis%>%
              filter(!is.na(citations_autres_avis))%>%
              separate_rows(citations_autres_avis , sep = ";")%>%
              mutate(Catégorie = "CCNE")%>%
              group_by(num,Catégorie)%>%
              summarise(nb_citation = n()))%>%
  left_join(metadata_avis,by = "num")%>%
  left_join(taille_avis,by = "num")%>%
  mutate(nb_citation = nb_citation/nb_pages)%>%
  filter(Catégorie != "Science, littérature")%>%
  ggscatter(x = "date", y = "nb_citation", facet.by = "Catégorie")+
  theme_ready()
```

```{r}
#| eval: false

metadata_citation%>%
  rename(num = cité_dans_avis_num, Catégorie = Groupe)%>%
  group_by(num, Catégorie)%>%
  mutate(num = as.numeric(num))%>%
  summarise(nb_citation = n())%>%
  bind_rows(metadata_avis%>%
              filter(!is.na(citations_autres_avis))%>%
              separate_rows(citations_autres_avis , sep = ";")%>%
              mutate(Catégorie = "CCNE")%>%
              group_by(num,Catégorie)%>%
              summarise(nb_citation = n()))%>%
  left_join(metadata_avis,by = "num")%>%
  left_join(taille_avis,by = "num")%>%
  mutate(nb_citation = nb_citation/nb_pages)%>%
  filter(Catégorie== "Science, littérature")%>%
  ggscatter(x = "date", y = "nb_citation", facet.by = "Catégorie")+
  theme_ready()
```

```{r}
#| eval: false

metadata_citation%>%
  rename(num = cité_dans_avis_num, Catégorie = Groupe)%>%
  filter(Catégorie == "Science, littérature")%>%
  group_by(num, Désignation)%>%
  mutate(num = as.numeric(num))%>%
  summarise(nb_citation = n())%>%
  left_join(metadata_avis,by = "num")%>%
  left_join(taille_avis,by = "num")%>%
  mutate(nb_citation = nb_citation/nb_pages)%>%
  filter(Désignation%in% c("Biologie","Economie","Ethique & philo","Médical","SHS","psycho&neuro"))%>%
  ggscatter(x = "date", y = "nb_citation", facet.by = "Désignation")+
  theme_ready()
```


```{r}
# reseau_citation_extra <- metadata_citation%>%
#   rename(Avis = cité_dans_avis_num)%>%
#   group_by(Avis,Désignation, Groupe)%>%
#   summarise(Citations = n())%>%
#   rename(from = Avis,
#          to = Désignation,
#          Categorie = Groupe)%>%
#   mutate(shape = "Extra citation")
# 
# reseau_citation_intra <- metadata_avis%>%
#   filter(!(is.na(citations_autres_avis)))%>%
#   separate_rows(citations_autres_avis , sep = ";")%>%
#   rename(from = num,
#          to = citations_autres_avis)%>%
#   group_by(from,to)%>%
#   summarise(Citations = n())%>%
#   mutate(shape = "Intra citation",
#          Categorie = "CCNE",
#          from = as.character(from))
# 
# mesograph_edgelist_df <- bind_rows(reseau_citation_extra,reseau_citation_intra)%>%
#   filter(!(to=="covid")) # supprimer les avis covid pour l'instant
# 
# 
# mesograph_nodes_df <- bind_rows(
#   metadata_citation%>%
#     rename(name = Désignation, Categorie = Groupe)%>%
#     mutate(shape = "Extra citation")%>%
#     select(name, Categorie, shape)%>%
#     distinct(),
#   metadata_avis%>%
#     mutate(name = as.character(num),
#            shape = "Intra citation",
#            Categorie = "CCNE")%>%
#     select(name, Categorie, shape)%>%
#     distinct()
# )%>%
#   filter(!(is.na(name)))
# 
# # Create the tbl_graph object
# reseau_citation <- tbl_graph(edges = mesograph_edgelist_df%>% 
#                      select(from, to,Citations, Categorie, shape),
#                    nodes = mesograph_nodes_df%>%
#                      select(name, Categorie, shape),
#                    directed = TRUE, node_key = "name")%>%
#   activate(nodes) %>%
#   filter(degree(.) > 0)
# 
# # Convertir l'objet tbl_graph en igraph
# reseau_citation_igraph <- as.igraph(reseau_citation)
# 
# # Convertir l'objet igraph en format compatible avec networkD3
# network_d3 <- igraph_to_networkD3(reseau_citation_igraph, group = V(reseau_citation_igraph)$Categorie)
# 
# # Créer le graphique networkD3
# forceNetwork(Links = network_d3$links, Nodes = network_d3$nodes, 
#              Source = 'source', Target = 'target', 
#              NodeID = 'name', Group = 'group', 
#              opacity = 0.8, fontSize = 12)
# ```
# ```{r}
# ggraph(reseau_citation, layout = 'stress') + 
#   geom_edge_link(aes(edge_alpha = Citations), show.legend = FALSE) +
#   geom_node_point(aes(fill = Categorie, shape = shape, size = degree(reseau_citation)), show.legend = TRUE) +
#   geom_node_text(aes(label = name), repel = TRUE, size = 3) +
#   scale_size_continuous(range = c(3, 10)) +
#   theme_void() +
#   theme(legend.position = "right") +
#   labs(title = "Graphique de citation", subtitle = "Visualisation des citations avec ggraph")
```

